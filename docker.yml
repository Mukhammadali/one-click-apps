version: '3'

services:
  db:
    image: postgres:13.7
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - db_net
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  # search:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
  #   container_name: search
  #   environment:
  #     cluster.name: fusionauth
  #     bootstrap.memory_lock: "true"
  #     discovery.type: single-node
  #     ES_JAVA_OPTS: ${ES_JAVA_OPTS}
  #   healthcheck:
  #     test: [ "CMD", "curl",  "--fail" ,"--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://localhost:9200/" ]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - search_net
  #   restart: unless-stopped
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - search_data:/usr/share/elasticsearch/data

  fusionauth:
    image: fusionauth/fusionauth-app:1.42.1
    depends_on:
      db:
        condition: service_healthy
      # search:
      #   condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: production
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      # SEARCH_SERVERS: http://search:9200
      SEARCH_TYPE: database

    networks:
      - db_net
      - app-network
      # - search_net
    restart: unless-stopped
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nodejs
    networks:
      - app-network
networks:
  db_net:
    driver: bridge
  # search_net:
  #   driver: bridge

volumes:
  db_data:
  fusionauth_config:
  # search_data: